plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example.spring'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ──────────────────────────────────────────────
    // Core Spring Boot Starters
    // ──────────────────────────────────────────────
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ──────────────────────────────────────────────
    // MyBatis
    // ──────────────────────────────────────────────
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

    // ──────────────────────────────────────────────
    // JWT
    // ──────────────────────────────────────────────
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ──────────────────────────────────────────────
    // Database Driver
    // ──────────────────────────────────────────────
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ──────────────────────────────────────────────
    // Lombok
    // ──────────────────────────────────────────────
    compileOnly        'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ──────────────────────────────────────────────
    // Testing
    // ──────────────────────────────────────────────
    testImplementation    'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly       'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// ──────────────────────────────────────────────
// JaCoCo Configuration
// ──────────────────────────────────────────────
jacoco {
    toolVersion = '0.8.13'
}

// Configure the existing jacocoTestReport task
tasks.named('jacocoTestReport', JacocoReport) {
    dependsOn tasks.named('test')
    reports {
        html.required.set(true)
        xml.required.set(true)
        csv.required.set(false)
    }

    // build/classes/java/main 대신 layout.buildDirectory.dir("classes/java/main") 사용
    classDirectories.setFrom(
            fileTree(layout.buildDirectory.dir("classes/java/test")) {
                include "com/example/spring/dropin/**"
            }
    )
    sourceDirectories.setFrom(files('src/test/java'))
    executionData.setFrom(files('build/jacoco/test.exec'))
}

// Configure the existing jacocoTestCoverageVerification task
tasks.named('jacocoTestCoverageVerification', JacocoCoverageVerification) {
    dependsOn tasks.named('jacocoTestReport')
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }

    classDirectories.setFrom(
            fileTree(layout.buildDirectory.dir("classes/java/test")) {
                include "com/example/spring/dropin/**"
            }
    )
    sourceDirectories.setFrom(files('src/test/java'))
    executionData.setFrom(files('build/jacoco/test.exec'))
}

// Ensure 'check' runs coverage verification
tasks.named('check') {
    dependsOn tasks.named('jacocoTestCoverageVerification')
}